/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.Cadastro;

import ClassesDeConexao.FuncionarioDB;
import ClassesDeConexao.UsuarioDB;
import Dialogs.JOPaneAviso;
import JDLocalizadores.JDLocalizadorFuncionario;
import Model.Funcionario;
import Model.Usuario;
import Util.Utilidades;
import static Util.Utilidades.validaInt;
import java.awt.event.KeyEvent;
import view.Gestao.GestaoUsuario;

/**
 *
 * @author csqueiroz
 */
public class CadastroUsuario extends javax.swing.JPanel {

    private Funcionario funcionario;
    private Usuario usuario;
    private GestaoUsuario gestaoUsuario;
    JDLocalizadorFuncionario lF = new JDLocalizadorFuncionario(this);

    /**
     * Creates new form CadastroUsuario
     */
    public CadastroUsuario(GestaoUsuario gU) {
        gestaoUsuario = gU;
        initComponents();

    }

    public void setUsuario(Usuario usuario) {
        jTFNmUsuario.setText(usuario.getNmUsuario());
        funcionario = new FuncionarioDB().getFuncionario(usuario.getNrFuncionario());
        jTFFuncionario.setText(funcionario.getNmFuncionario());
        jPFSenha.setText(usuario.getDsSenha());
        this.usuario = usuario;
    }

    private boolean validaCampos() {

        if (funcionario == null) {
            new JOPaneAviso("É necessario tem um funcionario relacionado ao usuário.");
            jTFFuncionario.requestFocus();
        } else if (jTFNmUsuario.getText().trim().equalsIgnoreCase("")) {
            new JOPaneAviso("Nome do usuário inválido.");
            jTFNmUsuario.requestFocus();
        } else if (jPFSenha.getText().trim().equalsIgnoreCase("")) {
            new JOPaneAviso("Senha inválida.");
            jPFSenha.requestFocus();
        } else {
            return true;
        }
        return false;
    }

    private void cadastrarUsuario() {
        Usuario u;
        if (usuario != null) {
            u = new Usuario(Utilidades.validaInt(usuario.getInt()), funcionario.getID(), jTFNmUsuario.getText(), jPFSenha.getText());
        } else {
            u = new Usuario(0, funcionario.getID(), jTFNmUsuario.getText(), jPFSenha.getText());
        }

        if (new UsuarioDB().cadastrarUsuario(u)) {
            new Util.UtilPanel().limpaCampos(this);
            funcionario = null;
            usuario = null;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTFNmUsuario = new javax.swing.JTextField();
        jPFSenha = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jTFFuncionario = new javax.swing.JTextField();
        jButtonCadastrar1 = new Botões.JButtonCadastrar();

        jLabel1.setText("Nome do usuário:");

        jLabel2.setText("Senha:");

        jTFNmUsuario.setBackground(new java.awt.Color(153, 255, 255));
        jTFNmUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFNmUsuarioKeyPressed(evt);
            }
        });

        jPFSenha.setBackground(new java.awt.Color(153, 255, 255));
        jPFSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPFSenhaKeyPressed(evt);
            }
        });

        jLabel3.setText("Funcionario:");

        jTFFuncionario.setEditable(false);
        jTFFuncionario.setBackground(new java.awt.Color(153, 255, 255));
        jTFFuncionario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFFuncionarioKeyPressed(evt);
            }
        });

        jButtonCadastrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastrar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPFSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTFFuncionario, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFNmUsuario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCadastrar1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(301, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTFNmUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jButtonCadastrar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jPFSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCadastrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastrar1ActionPerformed
        verificador();
    }//GEN-LAST:event_jButtonCadastrar1ActionPerformed

    private void jTFNmUsuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFNmUsuarioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            verificador();
        }
    }//GEN-LAST:event_jTFNmUsuarioKeyPressed

    private void jPFSenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPFSenhaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            verificador();
        }
    }//GEN-LAST:event_jPFSenhaKeyPressed

    private void jTFFuncionarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFFuncionarioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            lF.ativar();
        } else {
            jTFFuncionario.setText("");
        }
    }//GEN-LAST:event_jTFFuncionarioKeyPressed

    public void atualizaRetorno() {
        funcionario = new FuncionarioDB().getFuncionario(validaInt(lF.getRetorno()));
        jTFFuncionario.setText(funcionario.getNmFuncionario());
    }

    private void verificador() {
        if (validaCampos()) {
            cadastrarUsuario();

        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Botões.JButtonCadastrar jButtonCadastrar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField jPFSenha;
    private javax.swing.JTextField jTFFuncionario;
    private javax.swing.JTextField jTFNmUsuario;
    // End of variables declaration//GEN-END:variables
}
