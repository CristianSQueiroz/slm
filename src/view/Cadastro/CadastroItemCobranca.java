/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.Cadastro;

import ClassesDeConexao.FuncionarioDB;
import ClassesDeConexao.ItemCobrancaDB;
import ClassesDeConexao.ServicosAExecutarDB;
import Model.Funcionario;
import Model.ItemCobranca;
import Model.ServicosAExecutar;
import Util.Utilidades;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author csqueiroz
 */
public class CadastroItemCobranca extends javax.swing.JPanel {

    private ItemCobranca itemCobranca;

    /**
     * Creates new form CadastroFuncionario
     */
    public CadastroItemCobranca() {
        initComponents();
    }

    public void setItemCobranca(ItemCobranca itemCobranca) {
        this.itemCobranca = itemCobranca;
        preencheCampos();
    }

    private void preencheCampos() {
        jTFDs_Descricao.setText(itemCobranca.getDescricao().toString());
        jTFValor.setText(itemCobranca.getValor().toString());
    }

    private void cadastrarItemCobranca() {
        if (itemCobranca != null) {
            if (new ItemCobrancaDB().editarItemCobranca(itemCobranca)) {
                new Util.UtilPanel().limpaCampos(this);
                jTFDs_Descricao.requestFocus();
            }
        } else {
            ItemCobranca ic = new ItemCobranca(0, jTFDs_Descricao.getText(), Utilidades.validaDouble(jTFValor.getText()));
            if (new ItemCobrancaDB().cadastrarItemCobranca(ic)) {
                new Util.UtilPanel().limpaCampos(this);
                jTFDs_Descricao.requestFocus();
            }
        }

    }

    private boolean validaCampos() {
        if (!jTFDs_Descricao.getText().trim().equalsIgnoreCase("")) {
            if (!jTFValor.getText().trim().equalsIgnoreCase("")) {
                return true;
            } else {
                JOptionPane.showMessageDialog(null, "É necessário possuir um valor.");
                jTFValor.requestFocus();
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(null, "É necessário possuir uma descrição.");
            jTFDs_Descricao.requestFocus();
            return false;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTFDs_Descricao = new javax.swing.JTextField();
        jButtonCadastrar1 = new Botões.JButtonCadastrar();
        jLabel2 = new javax.swing.JLabel();
        jTFValor = new javax.swing.JTextField();

        jLabel1.setText("Descrição:");

        jTFDs_Descricao.setBackground(new java.awt.Color(153, 255, 255));
        jTFDs_Descricao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFDs_DescricaoKeyPressed(evt);
            }
        });

        jButtonCadastrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastrar1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Valor:");

        jTFValor.setBackground(new java.awt.Color(153, 255, 255));
        jTFValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFValorKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButtonCadastrar1, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                        .addComponent(jTFDs_Descricao, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE))
                    .addComponent(jTFValor, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(457, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTFDs_Descricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTFValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jButtonCadastrar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCadastrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastrar1ActionPerformed
        verificador();
    }//GEN-LAST:event_jButtonCadastrar1ActionPerformed

    private void jTFDs_DescricaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFDs_DescricaoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            verificador();
        }
    }//GEN-LAST:event_jTFDs_DescricaoKeyPressed

    private void jTFValorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFValorKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            verificador();
        }
    }//GEN-LAST:event_jTFValorKeyPressed

    private void verificador() {
        if (validaCampos()) {
            cadastrarItemCobranca();
        }
    }

    private void limpar() {
        itemCobranca = null;
        jTFDs_Descricao.setText("");
        jTFValor.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Botões.JButtonCadastrar jButtonCadastrar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTFDs_Descricao;
    private javax.swing.JTextField jTFValor;
    // End of variables declaration//GEN-END:variables
}
