/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.Cadastro;

import ClassesDeConexao.FuncionarioDB;
import Model.Funcionario;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author csqueiroz
 */
public class CadastroFuncionario extends javax.swing.JPanel {

    Funcionario funcionario;

    /**
     * Creates new form CadastroFuncionario
     */
    public CadastroFuncionario() {
        initComponents();
    }

    public void setFuncionario(Funcionario funcionario) {
        this.funcionario = funcionario;
        preencheCampos();
    }

    private void preencheCampos() {
        jTFNmFuncionario.setText(funcionario.getNmFuncionario());
        jTFPIS.setText(funcionario.getPIS());
    }

    private void cadastrarFuncionario() {
        if (funcionario != null) {
            if (new FuncionarioDB().editarFuncionario(new Funcionario(funcionario.getID(), jTFNmFuncionario.getText(), jTFPIS.getText()))) {
                new Util.UtilPanel().limpaCampos(this);
                jTFNmFuncionario.requestFocus();
            }
        } else {
            Funcionario f = new Funcionario(0, jTFNmFuncionario.getText(), jTFPIS.getText());
            if (new FuncionarioDB().criarFuncionario(f)) {
                new Util.UtilPanel().limpaCampos(this);
                jTFNmFuncionario.requestFocus();
            }
        }

    }

    private boolean validaCampos() {
        if (!jTFNmFuncionario.getText().trim().equalsIgnoreCase("")) {
            return true;
        } else {
            JOptionPane.showMessageDialog(null, "O nome do funcionário é necessário.");
            jTFNmFuncionario.requestFocus();
            return false;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTFNmFuncionario = new javax.swing.JTextField();
        jTFPIS = new javax.swing.JTextField();
        jButtonCadastrar1 = new Botões.JButtonCadastrar();

        jLabel1.setText("Nome:");

        jLabel2.setText("PIS:");

        jTFNmFuncionario.setBackground(new java.awt.Color(153, 255, 255));
        jTFNmFuncionario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFNmFuncionarioKeyPressed(evt);
            }
        });

        jTFPIS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFPISKeyPressed(evt);
            }
        });

        jButtonCadastrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastrar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonCadastrar1, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                    .addComponent(jTFNmFuncionario, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                    .addComponent(jTFPIS))
                .addContainerGap(479, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTFNmFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTFPIS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonCadastrar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCadastrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastrar1ActionPerformed
        verificador();
    }//GEN-LAST:event_jButtonCadastrar1ActionPerformed

    private void jTFNmFuncionarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFNmFuncionarioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            verificador();
        }
    }//GEN-LAST:event_jTFNmFuncionarioKeyPressed

    private void jTFPISKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFPISKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            verificador();
        }
    }//GEN-LAST:event_jTFPISKeyPressed

    private void verificador() {
        if (validaCampos()) {
            cadastrarFuncionario();
        }
    }

    private void limpar() {
        funcionario = null;
        jTFNmFuncionario.setText("");
        jTFPIS.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Botões.JButtonCadastrar jButtonCadastrar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTFNmFuncionario;
    private javax.swing.JTextField jTFPIS;
    // End of variables declaration//GEN-END:variables
}
